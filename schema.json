{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "required": [
    "id",
    "name",
    "configSchema",
    "startAuth",
    "checkAuth",
    "getInvoices"
  ],
  "properties": {
    "$schema": {
      "type": "string",
      "description": "The URL of the JSON schema used to validate the plugin",
      "title": "JSON Schema"
    },
    "id": {
      "type": "string",
      "description": "The unique ID of the plugin",
      "title": "Plugin ID"
    },
    "name": {
      "type": "string",
      "description": "The unique name of the plugin",
      "title": "Plugin Name"
    },
    "description": {
      "type": "string",
      "description": "A short summary describing what the plugin does",
      "title": "Plugin Description"
    },
    "homepage": {
      "type": "string",
      "description": "The URL of the service the plugin is for. Used for linking to the service and for the plugin logo.",
      "title": "Plugin Homepage"
    },
    "configSchema": {
      "type": "object",
      "required": [],
      "properties": {},
      "additionalProperties": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "required": {
            "type": "boolean",
            "description": "Whether or not this property is required for the plugin to function",
            "title": "Required"
          },
          "title": {
            "type": "string",
            "description": "The human-readable title of the property",
            "title": "Title"
          },
          "description": {
            "type": "string",
            "description": "A brief description of what this property is used for",
            "title": "Description"
          },
          "example": {
            "type": "string",
            "description": "An example value for this property",
            "title": "Example"
          },
          "type": {
            "enum": [
              "string",
              "number",
              "boolean",
              "password"
            ],
            "description": "The type of the property.",
            "title": "Type"
          }
        },
        "additionalProperties": false,
        "description": "Defines a single property in the plugin configuration schema",
        "title": "Configuration Property",
        "examples": [
          {
            "type": "string",
            "title": "Username",
            "description": "The username for login",
            "required": true
          }
        ]
      },
      "description": "A list of properties that can be configured for the plugin",
      "title": "Configuration Properties"
    },
    "startAuth": {
      "type": "array",
      "items": {
        "anyOf": [
          {
            "type": "object",
            "required": [
              "action",
              "selector",
              "value"
            ],
            "properties": {
              "action": {
                "const": "type"
              },
              "scopeSelector": {
                "type": "boolean",
                "description": "Defaults to true. If set, the selector will be scoped to the parent element",
                "title": "Scope Selector",
                "default": true
              },
              "optional": {
                "type": "boolean",
                "description": "Whether or not the flow should continue if this step fails",
                "title": "Optional"
              },
              "selector": {
                "type": "string",
                "description": "The CSS selector to use to find the element",
                "title": "Selector",
                "examples": [
                  "#example"
                ]
              },
              "value": {
                "type": "string",
                "description": "a string",
                "title": "string"
              },
              "description": {
                "type": "string",
                "description": "A human-readable description of what this step does",
                "title": "Description"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "action",
              "selector",
              "forEach",
              "fields"
            ],
            "properties": {
              "action": {
                "const": "extractAll"
              },
              "variable": {
                "type": "string",
                "description": "The name of the variable to store the extracted value in. This is only available inside the forEach step, and represents a single item. Defaults to `item`",
                "title": "Variable",
                "default": "item"
              },
              "selector": {
                "type": "string",
                "description": "The CSS selector to use to find the element",
                "title": "Selector",
                "examples": [
                  "#example"
                ]
              },
              "pagination": {
                "anyOf": [
                  {
                    "type": "object",
                    "required": [
                      "type",
                      "selector",
                      "waitForSelector"
                    ],
                    "properties": {
                      "type": {
                        "const": "next"
                      },
                      "selector": {
                        "type": "string",
                        "description": "The CSS selector to use to find the element",
                        "title": "Selector",
                        "examples": [
                          "#example"
                        ]
                      },
                      "waitForSelector": {
                        "type": "string",
                        "description": "The CSS selector to use to find the element",
                        "title": "Selector",
                        "examples": [
                          "#example"
                        ]
                      }
                    },
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "required": [
                      "type",
                      "script",
                      "waitForSelector"
                    ],
                    "properties": {
                      "type": {
                        "const": "script"
                      },
                      "script": {
                        "type": "string",
                        "description": "a string",
                        "title": "string"
                      },
                      "waitForSelector": {
                        "type": "string",
                        "description": "The CSS selector to use to find the element",
                        "title": "Selector",
                        "examples": [
                          "#example"
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                ],
                "description": "Defines how to paginate through the results",
                "title": "Pagination"
              },
              "forEach": {
                "type": "array",
                "items": {
                  "$ref": "#/$defs/Step"
                }
              },
              "fields": {
                "type": "object",
                "required": [],
                "properties": {},
                "additionalProperties": {
                  "anyOf": [
                    {
                      "type": "object",
                      "required": [
                        "selector"
                      ],
                      "properties": {
                        "selector": {
                          "type": "string",
                          "description": "The CSS selector to use to find the element",
                          "title": "Selector",
                          "examples": [
                            "#example"
                          ]
                        },
                        "attribute": {
                          "type": "string",
                          "description": "The attribute to get from the element. If not specified, the inner text will be used",
                          "title": "Attribute"
                        },
                        "transform": {
                          "type": "string",
                          "description": "A JavaScript function to transform the value",
                          "title": "Transform",
                          "examples": [
                            "(v) => Number(v.replace('$', ''))"
                          ]
                        }
                      },
                      "additionalProperties": false
                    },
                    {
                      "type": "string",
                      "description": "a string",
                      "title": "string"
                    }
                  ]
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "action",
              "selector"
            ],
            "properties": {
              "action": {
                "const": "click"
              },
              "scopeSelector": {
                "type": "boolean",
                "description": "Defaults to true. If set, the selector will be scoped to the parent element",
                "title": "Scope Selector",
                "default": true
              },
              "optional": {
                "type": "boolean",
                "description": "Whether or not the flow should continue if this step fails",
                "title": "Optional"
              },
              "selector": {
                "type": "string",
                "description": "The CSS selector to use to find the element",
                "title": "Selector",
                "examples": [
                  "#example"
                ]
              },
              "description": {
                "type": "string",
                "description": "A human-readable description of what this step does",
                "title": "Description"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "action",
              "selector"
            ],
            "properties": {
              "action": {
                "const": "waitForElement"
              },
              "optional": {
                "type": "boolean",
                "description": "Whether or not the flow should continue if this step fails",
                "title": "Optional"
              },
              "selector": {
                "type": "string",
                "description": "The CSS selector to use to find the element",
                "title": "Selector",
                "examples": [
                  "#example"
                ]
              },
              "timeout": {
                "type": "number",
                "description": "The number of milliseconds to wait for. Defaults to 15s.",
                "title": "Timeout",
                "examples": [
                  15000
                ],
                "default": 15000
              },
              "description": {
                "type": "string",
                "description": "A human-readable description of what this step does",
                "title": "Description"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "action",
              "script",
              "forEach"
            ],
            "properties": {
              "action": {
                "const": "extractAll"
              },
              "variable": {
                "type": "string",
                "description": "The name of the variable to store the extracted value in. This is only available inside the forEach step, and represents a single item. Defaults to `item`",
                "title": "Variable",
                "default": "item"
              },
              "script": {
                "type": "string",
                "description": "A JavaScript script to run in the page context",
                "title": "Script",
                "examples": [
                  {
                    "script": "console.log(\"Hello World\");"
                  }
                ]
              },
              "pagination": {
                "anyOf": [
                  {
                    "type": "object",
                    "required": [
                      "type",
                      "selector",
                      "waitForSelector"
                    ],
                    "properties": {
                      "type": {
                        "const": "next"
                      },
                      "selector": {
                        "type": "string",
                        "description": "The CSS selector to use to find the element",
                        "title": "Selector",
                        "examples": [
                          "#example"
                        ]
                      },
                      "waitForSelector": {
                        "type": "string",
                        "description": "The CSS selector to use to find the element",
                        "title": "Selector",
                        "examples": [
                          "#example"
                        ]
                      }
                    },
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "required": [
                      "type",
                      "script",
                      "waitForSelector"
                    ],
                    "properties": {
                      "type": {
                        "const": "script"
                      },
                      "script": {
                        "type": "string",
                        "description": "a string",
                        "title": "string"
                      },
                      "waitForSelector": {
                        "type": "string",
                        "description": "The CSS selector to use to find the element",
                        "title": "Selector",
                        "examples": [
                          "#example"
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                ],
                "description": "Defines how to paginate through the results",
                "title": "Pagination"
              },
              "forEach": {
                "type": "array",
                "items": {
                  "$ref": "#/$defs/Step"
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "action",
              "script"
            ],
            "properties": {
              "action": {
                "const": "runJs"
              },
              "optional": {
                "type": "boolean",
                "description": "Whether or not the flow should continue if this step fails",
                "title": "Optional"
              },
              "script": {
                "type": "string",
                "description": "a string",
                "title": "string"
              },
              "description": {
                "type": "string",
                "description": "A human-readable description of what this step does",
                "title": "Description"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "action",
              "invoice"
            ],
            "properties": {
              "action": {
                "const": "waitForPdfDownload"
              },
              "timeout": {
                "type": "number",
                "description": "The number of milliseconds to wait for. Defaults to 15s.",
                "title": "Timeout",
                "examples": [
                  15000
                ],
                "default": 15000
              },
              "description": {
                "type": "string",
                "description": "A human-readable description of what this step does",
                "title": "Description"
              },
              "invoice": {
                "anyOf": [
                  {
                    "type": "object",
                    "required": [
                      "id",
                      "date",
                      "total"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the invoice",
                        "title": "Invoice ID"
                      },
                      "date": {
                        "type": "string",
                        "description": "The date of the invoice",
                        "title": "Invoice Date"
                      },
                      "total": {
                        "type": "string",
                        "description": "The amount of the invoice, including the currency symbol or code.",
                        "title": "Invoice Amount"
                      }
                    },
                    "additionalProperties": false
                  },
                  {
                    "type": "string",
                    "description": "The name of the variable containing the invoice data.",
                    "title": "Invoice Variable"
                  }
                ]
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "action",
              "variable",
              "script"
            ],
            "properties": {
              "action": {
                "const": "extract"
              },
              "variable": {
                "type": "string",
                "description": "The name of the variable to store the extracted value in. Defaults to `item`",
                "title": "Variable"
              },
              "script": {
                "type": "string",
                "description": "A JavaScript script to run in the page context",
                "title": "Script",
                "examples": [
                  {
                    "script": "console.log(\"Hello World\");"
                  }
                ]
              },
              "description": {
                "type": "string",
                "description": "A human-readable description of what this step does",
                "title": "Description"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "action",
              "variable",
              "fields"
            ],
            "properties": {
              "action": {
                "const": "extract"
              },
              "variable": {
                "type": "string",
                "description": "The name of the variable to store the extracted value in. Defaults to `item`",
                "title": "Variable"
              },
              "description": {
                "type": "string",
                "description": "A human-readable description of what this step does",
                "title": "Description"
              },
              "fields": {
                "type": "object",
                "required": [],
                "properties": {},
                "additionalProperties": {
                  "anyOf": [
                    {
                      "type": "object",
                      "required": [
                        "selector"
                      ],
                      "properties": {
                        "selector": {
                          "type": "string",
                          "description": "The CSS selector to use to find the element",
                          "title": "Selector",
                          "examples": [
                            "#example"
                          ]
                        },
                        "attribute": {
                          "type": "string",
                          "description": "The attribute to get from the element. If not specified, the inner text will be used",
                          "title": "Attribute"
                        },
                        "transform": {
                          "type": "string",
                          "description": "A JavaScript function to transform the value",
                          "title": "Transform",
                          "examples": [
                            "(v) => Number(v.replace('$', ''))"
                          ]
                        }
                      },
                      "additionalProperties": false
                    },
                    {
                      "type": "string",
                      "description": "a string",
                      "title": "string"
                    }
                  ]
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "action",
              "url",
              "invoice"
            ],
            "properties": {
              "action": {
                "const": "downloadPdf"
              },
              "url": {
                "type": "string",
                "description": "The URL to download the PDF from",
                "title": "URL"
              },
              "description": {
                "type": "string",
                "description": "A human-readable description of what this step does",
                "title": "Description"
              },
              "invoice": {
                "anyOf": [
                  {
                    "type": "object",
                    "required": [
                      "id",
                      "date",
                      "total"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the invoice",
                        "title": "Invoice ID"
                      },
                      "date": {
                        "type": "string",
                        "description": "The date of the invoice",
                        "title": "Invoice Date"
                      },
                      "total": {
                        "type": "string",
                        "description": "The amount of the invoice, including the currency symbol or code.",
                        "title": "Invoice Amount"
                      }
                    },
                    "additionalProperties": false
                  },
                  {
                    "type": "string",
                    "description": "The name of the variable containing the invoice data.",
                    "title": "Invoice Variable"
                  }
                ]
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "action",
              "url"
            ],
            "properties": {
              "action": {
                "const": "navigate"
              },
              "url": {
                "type": "string",
                "description": "The URL to navigate to",
                "title": "URL"
              },
              "description": {
                "type": "string",
                "description": "A human-readable description of what this step does",
                "title": "Description"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "action",
              "selector"
            ],
            "properties": {
              "action": {
                "const": "checkElementExists"
              },
              "selector": {
                "type": "string",
                "description": "The CSS selector to use to find the element",
                "title": "Selector",
                "examples": [
                  "#example"
                ]
              },
              "description": {
                "type": "string",
                "description": "A human-readable description of what this step does",
                "title": "Description"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "action",
              "invoice"
            ],
            "properties": {
              "action": {
                "const": "printPdf"
              },
              "description": {
                "type": "string",
                "description": "A human-readable description of what this step does",
                "title": "Description"
              },
              "invoice": {
                "anyOf": [
                  {
                    "type": "object",
                    "required": [
                      "id",
                      "date",
                      "total"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the invoice",
                        "title": "Invoice ID"
                      },
                      "date": {
                        "type": "string",
                        "description": "The date of the invoice",
                        "title": "Invoice Date"
                      },
                      "total": {
                        "type": "string",
                        "description": "The amount of the invoice, including the currency symbol or code.",
                        "title": "Invoice Amount"
                      }
                    },
                    "additionalProperties": false
                  },
                  {
                    "type": "string",
                    "description": "The name of the variable containing the invoice data.",
                    "title": "Invoice Variable"
                  }
                ]
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "action"
            ],
            "properties": {
              "action": {
                "const": "waitForNavigation"
              },
              "timeout": {
                "type": "number",
                "description": "The number of milliseconds to wait for. Defaults to 15s.",
                "title": "Timeout",
                "examples": [
                  15000
                ],
                "default": 15000
              },
              "description": {
                "type": "string",
                "description": "A human-readable description of what this step does",
                "title": "Description"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "action",
              "duration"
            ],
            "properties": {
              "action": {
                "const": "sleep"
              },
              "duration": {
                "type": "number",
                "description": "The number of milliseconds to wait for",
                "title": "Duration"
              },
              "description": {
                "type": "string",
                "description": "A human-readable description of what this step does",
                "title": "Description"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "action",
              "url"
            ],
            "properties": {
              "action": {
                "const": "getInvoiceFromStripeUrl"
              },
              "url": {
                "type": "string",
                "description": "The URL of the Stripe invoice",
                "title": "Stripe Invoice URL"
              },
              "description": {
                "type": "string",
                "description": "A human-readable description of what this step does",
                "title": "Description"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "description": "Steps to authenticate the user",
      "title": "Authentication"
    },
    "checkAuth": {
      "type": "array",
      "items": {
        "anyOf": [
          {
            "type": "object",
            "required": [
              "action",
              "selector",
              "value"
            ],
            "properties": {
              "action": {
                "const": "type"
              },
              "scopeSelector": {
                "type": "boolean",
                "description": "Defaults to true. If set, the selector will be scoped to the parent element",
                "title": "Scope Selector",
                "default": true
              },
              "optional": {
                "type": "boolean",
                "description": "Whether or not the flow should continue if this step fails",
                "title": "Optional"
              },
              "selector": {
                "type": "string",
                "description": "The CSS selector to use to find the element",
                "title": "Selector",
                "examples": [
                  "#example"
                ]
              },
              "value": {
                "type": "string",
                "description": "a string",
                "title": "string"
              },
              "description": {
                "type": "string",
                "description": "A human-readable description of what this step does",
                "title": "Description"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "action",
              "selector",
              "forEach",
              "fields"
            ],
            "properties": {
              "action": {
                "const": "extractAll"
              },
              "variable": {
                "type": "string",
                "description": "The name of the variable to store the extracted value in. This is only available inside the forEach step, and represents a single item. Defaults to `item`",
                "title": "Variable",
                "default": "item"
              },
              "selector": {
                "type": "string",
                "description": "The CSS selector to use to find the element",
                "title": "Selector",
                "examples": [
                  "#example"
                ]
              },
              "pagination": {
                "anyOf": [
                  {
                    "type": "object",
                    "required": [
                      "type",
                      "selector",
                      "waitForSelector"
                    ],
                    "properties": {
                      "type": {
                        "const": "next"
                      },
                      "selector": {
                        "type": "string",
                        "description": "The CSS selector to use to find the element",
                        "title": "Selector",
                        "examples": [
                          "#example"
                        ]
                      },
                      "waitForSelector": {
                        "type": "string",
                        "description": "The CSS selector to use to find the element",
                        "title": "Selector",
                        "examples": [
                          "#example"
                        ]
                      }
                    },
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "required": [
                      "type",
                      "script",
                      "waitForSelector"
                    ],
                    "properties": {
                      "type": {
                        "const": "script"
                      },
                      "script": {
                        "type": "string",
                        "description": "a string",
                        "title": "string"
                      },
                      "waitForSelector": {
                        "type": "string",
                        "description": "The CSS selector to use to find the element",
                        "title": "Selector",
                        "examples": [
                          "#example"
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                ],
                "description": "Defines how to paginate through the results",
                "title": "Pagination"
              },
              "forEach": {
                "type": "array",
                "items": {
                  "$ref": "#/$defs/Step"
                }
              },
              "fields": {
                "type": "object",
                "required": [],
                "properties": {},
                "additionalProperties": {
                  "anyOf": [
                    {
                      "type": "object",
                      "required": [
                        "selector"
                      ],
                      "properties": {
                        "selector": {
                          "type": "string",
                          "description": "The CSS selector to use to find the element",
                          "title": "Selector",
                          "examples": [
                            "#example"
                          ]
                        },
                        "attribute": {
                          "type": "string",
                          "description": "The attribute to get from the element. If not specified, the inner text will be used",
                          "title": "Attribute"
                        },
                        "transform": {
                          "type": "string",
                          "description": "A JavaScript function to transform the value",
                          "title": "Transform",
                          "examples": [
                            "(v) => Number(v.replace('$', ''))"
                          ]
                        }
                      },
                      "additionalProperties": false
                    },
                    {
                      "type": "string",
                      "description": "a string",
                      "title": "string"
                    }
                  ]
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "action",
              "selector"
            ],
            "properties": {
              "action": {
                "const": "click"
              },
              "scopeSelector": {
                "type": "boolean",
                "description": "Defaults to true. If set, the selector will be scoped to the parent element",
                "title": "Scope Selector",
                "default": true
              },
              "optional": {
                "type": "boolean",
                "description": "Whether or not the flow should continue if this step fails",
                "title": "Optional"
              },
              "selector": {
                "type": "string",
                "description": "The CSS selector to use to find the element",
                "title": "Selector",
                "examples": [
                  "#example"
                ]
              },
              "description": {
                "type": "string",
                "description": "A human-readable description of what this step does",
                "title": "Description"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "action",
              "selector"
            ],
            "properties": {
              "action": {
                "const": "waitForElement"
              },
              "optional": {
                "type": "boolean",
                "description": "Whether or not the flow should continue if this step fails",
                "title": "Optional"
              },
              "selector": {
                "type": "string",
                "description": "The CSS selector to use to find the element",
                "title": "Selector",
                "examples": [
                  "#example"
                ]
              },
              "timeout": {
                "type": "number",
                "description": "The number of milliseconds to wait for. Defaults to 15s.",
                "title": "Timeout",
                "examples": [
                  15000
                ],
                "default": 15000
              },
              "description": {
                "type": "string",
                "description": "A human-readable description of what this step does",
                "title": "Description"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "action",
              "script",
              "forEach"
            ],
            "properties": {
              "action": {
                "const": "extractAll"
              },
              "variable": {
                "type": "string",
                "description": "The name of the variable to store the extracted value in. This is only available inside the forEach step, and represents a single item. Defaults to `item`",
                "title": "Variable",
                "default": "item"
              },
              "script": {
                "type": "string",
                "description": "A JavaScript script to run in the page context",
                "title": "Script",
                "examples": [
                  {
                    "script": "console.log(\"Hello World\");"
                  }
                ]
              },
              "pagination": {
                "anyOf": [
                  {
                    "type": "object",
                    "required": [
                      "type",
                      "selector",
                      "waitForSelector"
                    ],
                    "properties": {
                      "type": {
                        "const": "next"
                      },
                      "selector": {
                        "type": "string",
                        "description": "The CSS selector to use to find the element",
                        "title": "Selector",
                        "examples": [
                          "#example"
                        ]
                      },
                      "waitForSelector": {
                        "type": "string",
                        "description": "The CSS selector to use to find the element",
                        "title": "Selector",
                        "examples": [
                          "#example"
                        ]
                      }
                    },
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "required": [
                      "type",
                      "script",
                      "waitForSelector"
                    ],
                    "properties": {
                      "type": {
                        "const": "script"
                      },
                      "script": {
                        "type": "string",
                        "description": "a string",
                        "title": "string"
                      },
                      "waitForSelector": {
                        "type": "string",
                        "description": "The CSS selector to use to find the element",
                        "title": "Selector",
                        "examples": [
                          "#example"
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                ],
                "description": "Defines how to paginate through the results",
                "title": "Pagination"
              },
              "forEach": {
                "type": "array",
                "items": {
                  "$ref": "#/$defs/Step"
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "action",
              "script"
            ],
            "properties": {
              "action": {
                "const": "runJs"
              },
              "optional": {
                "type": "boolean",
                "description": "Whether or not the flow should continue if this step fails",
                "title": "Optional"
              },
              "script": {
                "type": "string",
                "description": "a string",
                "title": "string"
              },
              "description": {
                "type": "string",
                "description": "A human-readable description of what this step does",
                "title": "Description"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "action",
              "invoice"
            ],
            "properties": {
              "action": {
                "const": "waitForPdfDownload"
              },
              "timeout": {
                "type": "number",
                "description": "The number of milliseconds to wait for. Defaults to 15s.",
                "title": "Timeout",
                "examples": [
                  15000
                ],
                "default": 15000
              },
              "description": {
                "type": "string",
                "description": "A human-readable description of what this step does",
                "title": "Description"
              },
              "invoice": {
                "anyOf": [
                  {
                    "type": "object",
                    "required": [
                      "id",
                      "date",
                      "total"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the invoice",
                        "title": "Invoice ID"
                      },
                      "date": {
                        "type": "string",
                        "description": "The date of the invoice",
                        "title": "Invoice Date"
                      },
                      "total": {
                        "type": "string",
                        "description": "The amount of the invoice, including the currency symbol or code.",
                        "title": "Invoice Amount"
                      }
                    },
                    "additionalProperties": false
                  },
                  {
                    "type": "string",
                    "description": "The name of the variable containing the invoice data.",
                    "title": "Invoice Variable"
                  }
                ]
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "action",
              "variable",
              "script"
            ],
            "properties": {
              "action": {
                "const": "extract"
              },
              "variable": {
                "type": "string",
                "description": "The name of the variable to store the extracted value in. Defaults to `item`",
                "title": "Variable"
              },
              "script": {
                "type": "string",
                "description": "A JavaScript script to run in the page context",
                "title": "Script",
                "examples": [
                  {
                    "script": "console.log(\"Hello World\");"
                  }
                ]
              },
              "description": {
                "type": "string",
                "description": "A human-readable description of what this step does",
                "title": "Description"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "action",
              "variable",
              "fields"
            ],
            "properties": {
              "action": {
                "const": "extract"
              },
              "variable": {
                "type": "string",
                "description": "The name of the variable to store the extracted value in. Defaults to `item`",
                "title": "Variable"
              },
              "description": {
                "type": "string",
                "description": "A human-readable description of what this step does",
                "title": "Description"
              },
              "fields": {
                "type": "object",
                "required": [],
                "properties": {},
                "additionalProperties": {
                  "anyOf": [
                    {
                      "type": "object",
                      "required": [
                        "selector"
                      ],
                      "properties": {
                        "selector": {
                          "type": "string",
                          "description": "The CSS selector to use to find the element",
                          "title": "Selector",
                          "examples": [
                            "#example"
                          ]
                        },
                        "attribute": {
                          "type": "string",
                          "description": "The attribute to get from the element. If not specified, the inner text will be used",
                          "title": "Attribute"
                        },
                        "transform": {
                          "type": "string",
                          "description": "A JavaScript function to transform the value",
                          "title": "Transform",
                          "examples": [
                            "(v) => Number(v.replace('$', ''))"
                          ]
                        }
                      },
                      "additionalProperties": false
                    },
                    {
                      "type": "string",
                      "description": "a string",
                      "title": "string"
                    }
                  ]
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "action",
              "url",
              "invoice"
            ],
            "properties": {
              "action": {
                "const": "downloadPdf"
              },
              "url": {
                "type": "string",
                "description": "The URL to download the PDF from",
                "title": "URL"
              },
              "description": {
                "type": "string",
                "description": "A human-readable description of what this step does",
                "title": "Description"
              },
              "invoice": {
                "anyOf": [
                  {
                    "type": "object",
                    "required": [
                      "id",
                      "date",
                      "total"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the invoice",
                        "title": "Invoice ID"
                      },
                      "date": {
                        "type": "string",
                        "description": "The date of the invoice",
                        "title": "Invoice Date"
                      },
                      "total": {
                        "type": "string",
                        "description": "The amount of the invoice, including the currency symbol or code.",
                        "title": "Invoice Amount"
                      }
                    },
                    "additionalProperties": false
                  },
                  {
                    "type": "string",
                    "description": "The name of the variable containing the invoice data.",
                    "title": "Invoice Variable"
                  }
                ]
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "action",
              "url"
            ],
            "properties": {
              "action": {
                "const": "navigate"
              },
              "url": {
                "type": "string",
                "description": "The URL to navigate to",
                "title": "URL"
              },
              "description": {
                "type": "string",
                "description": "A human-readable description of what this step does",
                "title": "Description"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "action",
              "selector"
            ],
            "properties": {
              "action": {
                "const": "checkElementExists"
              },
              "selector": {
                "type": "string",
                "description": "The CSS selector to use to find the element",
                "title": "Selector",
                "examples": [
                  "#example"
                ]
              },
              "description": {
                "type": "string",
                "description": "A human-readable description of what this step does",
                "title": "Description"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "action",
              "invoice"
            ],
            "properties": {
              "action": {
                "const": "printPdf"
              },
              "description": {
                "type": "string",
                "description": "A human-readable description of what this step does",
                "title": "Description"
              },
              "invoice": {
                "anyOf": [
                  {
                    "type": "object",
                    "required": [
                      "id",
                      "date",
                      "total"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the invoice",
                        "title": "Invoice ID"
                      },
                      "date": {
                        "type": "string",
                        "description": "The date of the invoice",
                        "title": "Invoice Date"
                      },
                      "total": {
                        "type": "string",
                        "description": "The amount of the invoice, including the currency symbol or code.",
                        "title": "Invoice Amount"
                      }
                    },
                    "additionalProperties": false
                  },
                  {
                    "type": "string",
                    "description": "The name of the variable containing the invoice data.",
                    "title": "Invoice Variable"
                  }
                ]
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "action"
            ],
            "properties": {
              "action": {
                "const": "waitForNavigation"
              },
              "timeout": {
                "type": "number",
                "description": "The number of milliseconds to wait for. Defaults to 15s.",
                "title": "Timeout",
                "examples": [
                  15000
                ],
                "default": 15000
              },
              "description": {
                "type": "string",
                "description": "A human-readable description of what this step does",
                "title": "Description"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "action",
              "duration"
            ],
            "properties": {
              "action": {
                "const": "sleep"
              },
              "duration": {
                "type": "number",
                "description": "The number of milliseconds to wait for",
                "title": "Duration"
              },
              "description": {
                "type": "string",
                "description": "A human-readable description of what this step does",
                "title": "Description"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "action",
              "url"
            ],
            "properties": {
              "action": {
                "const": "getInvoiceFromStripeUrl"
              },
              "url": {
                "type": "string",
                "description": "The URL of the Stripe invoice",
                "title": "Stripe Invoice URL"
              },
              "description": {
                "type": "string",
                "description": "A human-readable description of what this step does",
                "title": "Description"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "description": "Steps to check if the user is already authenticated",
      "title": "`Verify Authentication"
    },
    "getInvoices": {
      "type": "array",
      "items": {
        "anyOf": [
          {
            "type": "object",
            "required": [
              "action",
              "selector",
              "value"
            ],
            "properties": {
              "action": {
                "const": "type"
              },
              "scopeSelector": {
                "type": "boolean",
                "description": "Defaults to true. If set, the selector will be scoped to the parent element",
                "title": "Scope Selector",
                "default": true
              },
              "optional": {
                "type": "boolean",
                "description": "Whether or not the flow should continue if this step fails",
                "title": "Optional"
              },
              "selector": {
                "type": "string",
                "description": "The CSS selector to use to find the element",
                "title": "Selector",
                "examples": [
                  "#example"
                ]
              },
              "value": {
                "type": "string",
                "description": "a string",
                "title": "string"
              },
              "description": {
                "type": "string",
                "description": "A human-readable description of what this step does",
                "title": "Description"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "action",
              "selector",
              "forEach",
              "fields"
            ],
            "properties": {
              "action": {
                "const": "extractAll"
              },
              "variable": {
                "type": "string",
                "description": "The name of the variable to store the extracted value in. This is only available inside the forEach step, and represents a single item. Defaults to `item`",
                "title": "Variable",
                "default": "item"
              },
              "selector": {
                "type": "string",
                "description": "The CSS selector to use to find the element",
                "title": "Selector",
                "examples": [
                  "#example"
                ]
              },
              "pagination": {
                "anyOf": [
                  {
                    "type": "object",
                    "required": [
                      "type",
                      "selector",
                      "waitForSelector"
                    ],
                    "properties": {
                      "type": {
                        "const": "next"
                      },
                      "selector": {
                        "type": "string",
                        "description": "The CSS selector to use to find the element",
                        "title": "Selector",
                        "examples": [
                          "#example"
                        ]
                      },
                      "waitForSelector": {
                        "type": "string",
                        "description": "The CSS selector to use to find the element",
                        "title": "Selector",
                        "examples": [
                          "#example"
                        ]
                      }
                    },
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "required": [
                      "type",
                      "script",
                      "waitForSelector"
                    ],
                    "properties": {
                      "type": {
                        "const": "script"
                      },
                      "script": {
                        "type": "string",
                        "description": "a string",
                        "title": "string"
                      },
                      "waitForSelector": {
                        "type": "string",
                        "description": "The CSS selector to use to find the element",
                        "title": "Selector",
                        "examples": [
                          "#example"
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                ],
                "description": "Defines how to paginate through the results",
                "title": "Pagination"
              },
              "forEach": {
                "type": "array",
                "items": {
                  "$ref": "#/$defs/Step"
                }
              },
              "fields": {
                "type": "object",
                "required": [],
                "properties": {},
                "additionalProperties": {
                  "anyOf": [
                    {
                      "type": "object",
                      "required": [
                        "selector"
                      ],
                      "properties": {
                        "selector": {
                          "type": "string",
                          "description": "The CSS selector to use to find the element",
                          "title": "Selector",
                          "examples": [
                            "#example"
                          ]
                        },
                        "attribute": {
                          "type": "string",
                          "description": "The attribute to get from the element. If not specified, the inner text will be used",
                          "title": "Attribute"
                        },
                        "transform": {
                          "type": "string",
                          "description": "A JavaScript function to transform the value",
                          "title": "Transform",
                          "examples": [
                            "(v) => Number(v.replace('$', ''))"
                          ]
                        }
                      },
                      "additionalProperties": false
                    },
                    {
                      "type": "string",
                      "description": "a string",
                      "title": "string"
                    }
                  ]
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "action",
              "selector"
            ],
            "properties": {
              "action": {
                "const": "click"
              },
              "scopeSelector": {
                "type": "boolean",
                "description": "Defaults to true. If set, the selector will be scoped to the parent element",
                "title": "Scope Selector",
                "default": true
              },
              "optional": {
                "type": "boolean",
                "description": "Whether or not the flow should continue if this step fails",
                "title": "Optional"
              },
              "selector": {
                "type": "string",
                "description": "The CSS selector to use to find the element",
                "title": "Selector",
                "examples": [
                  "#example"
                ]
              },
              "description": {
                "type": "string",
                "description": "A human-readable description of what this step does",
                "title": "Description"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "action",
              "selector"
            ],
            "properties": {
              "action": {
                "const": "waitForElement"
              },
              "optional": {
                "type": "boolean",
                "description": "Whether or not the flow should continue if this step fails",
                "title": "Optional"
              },
              "selector": {
                "type": "string",
                "description": "The CSS selector to use to find the element",
                "title": "Selector",
                "examples": [
                  "#example"
                ]
              },
              "timeout": {
                "type": "number",
                "description": "The number of milliseconds to wait for. Defaults to 15s.",
                "title": "Timeout",
                "examples": [
                  15000
                ],
                "default": 15000
              },
              "description": {
                "type": "string",
                "description": "A human-readable description of what this step does",
                "title": "Description"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "action",
              "script",
              "forEach"
            ],
            "properties": {
              "action": {
                "const": "extractAll"
              },
              "variable": {
                "type": "string",
                "description": "The name of the variable to store the extracted value in. This is only available inside the forEach step, and represents a single item. Defaults to `item`",
                "title": "Variable",
                "default": "item"
              },
              "script": {
                "type": "string",
                "description": "A JavaScript script to run in the page context",
                "title": "Script",
                "examples": [
                  {
                    "script": "console.log(\"Hello World\");"
                  }
                ]
              },
              "pagination": {
                "anyOf": [
                  {
                    "type": "object",
                    "required": [
                      "type",
                      "selector",
                      "waitForSelector"
                    ],
                    "properties": {
                      "type": {
                        "const": "next"
                      },
                      "selector": {
                        "type": "string",
                        "description": "The CSS selector to use to find the element",
                        "title": "Selector",
                        "examples": [
                          "#example"
                        ]
                      },
                      "waitForSelector": {
                        "type": "string",
                        "description": "The CSS selector to use to find the element",
                        "title": "Selector",
                        "examples": [
                          "#example"
                        ]
                      }
                    },
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "required": [
                      "type",
                      "script",
                      "waitForSelector"
                    ],
                    "properties": {
                      "type": {
                        "const": "script"
                      },
                      "script": {
                        "type": "string",
                        "description": "a string",
                        "title": "string"
                      },
                      "waitForSelector": {
                        "type": "string",
                        "description": "The CSS selector to use to find the element",
                        "title": "Selector",
                        "examples": [
                          "#example"
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                ],
                "description": "Defines how to paginate through the results",
                "title": "Pagination"
              },
              "forEach": {
                "type": "array",
                "items": {
                  "$ref": "#/$defs/Step"
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "action",
              "script"
            ],
            "properties": {
              "action": {
                "const": "runJs"
              },
              "optional": {
                "type": "boolean",
                "description": "Whether or not the flow should continue if this step fails",
                "title": "Optional"
              },
              "script": {
                "type": "string",
                "description": "a string",
                "title": "string"
              },
              "description": {
                "type": "string",
                "description": "A human-readable description of what this step does",
                "title": "Description"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "action",
              "invoice"
            ],
            "properties": {
              "action": {
                "const": "waitForPdfDownload"
              },
              "timeout": {
                "type": "number",
                "description": "The number of milliseconds to wait for. Defaults to 15s.",
                "title": "Timeout",
                "examples": [
                  15000
                ],
                "default": 15000
              },
              "description": {
                "type": "string",
                "description": "A human-readable description of what this step does",
                "title": "Description"
              },
              "invoice": {
                "anyOf": [
                  {
                    "type": "object",
                    "required": [
                      "id",
                      "date",
                      "total"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the invoice",
                        "title": "Invoice ID"
                      },
                      "date": {
                        "type": "string",
                        "description": "The date of the invoice",
                        "title": "Invoice Date"
                      },
                      "total": {
                        "type": "string",
                        "description": "The amount of the invoice, including the currency symbol or code.",
                        "title": "Invoice Amount"
                      }
                    },
                    "additionalProperties": false
                  },
                  {
                    "type": "string",
                    "description": "The name of the variable containing the invoice data.",
                    "title": "Invoice Variable"
                  }
                ]
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "action",
              "variable",
              "script"
            ],
            "properties": {
              "action": {
                "const": "extract"
              },
              "variable": {
                "type": "string",
                "description": "The name of the variable to store the extracted value in. Defaults to `item`",
                "title": "Variable"
              },
              "script": {
                "type": "string",
                "description": "A JavaScript script to run in the page context",
                "title": "Script",
                "examples": [
                  {
                    "script": "console.log(\"Hello World\");"
                  }
                ]
              },
              "description": {
                "type": "string",
                "description": "A human-readable description of what this step does",
                "title": "Description"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "action",
              "variable",
              "fields"
            ],
            "properties": {
              "action": {
                "const": "extract"
              },
              "variable": {
                "type": "string",
                "description": "The name of the variable to store the extracted value in. Defaults to `item`",
                "title": "Variable"
              },
              "description": {
                "type": "string",
                "description": "A human-readable description of what this step does",
                "title": "Description"
              },
              "fields": {
                "type": "object",
                "required": [],
                "properties": {},
                "additionalProperties": {
                  "anyOf": [
                    {
                      "type": "object",
                      "required": [
                        "selector"
                      ],
                      "properties": {
                        "selector": {
                          "type": "string",
                          "description": "The CSS selector to use to find the element",
                          "title": "Selector",
                          "examples": [
                            "#example"
                          ]
                        },
                        "attribute": {
                          "type": "string",
                          "description": "The attribute to get from the element. If not specified, the inner text will be used",
                          "title": "Attribute"
                        },
                        "transform": {
                          "type": "string",
                          "description": "A JavaScript function to transform the value",
                          "title": "Transform",
                          "examples": [
                            "(v) => Number(v.replace('$', ''))"
                          ]
                        }
                      },
                      "additionalProperties": false
                    },
                    {
                      "type": "string",
                      "description": "a string",
                      "title": "string"
                    }
                  ]
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "action",
              "url",
              "invoice"
            ],
            "properties": {
              "action": {
                "const": "downloadPdf"
              },
              "url": {
                "type": "string",
                "description": "The URL to download the PDF from",
                "title": "URL"
              },
              "description": {
                "type": "string",
                "description": "A human-readable description of what this step does",
                "title": "Description"
              },
              "invoice": {
                "anyOf": [
                  {
                    "type": "object",
                    "required": [
                      "id",
                      "date",
                      "total"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the invoice",
                        "title": "Invoice ID"
                      },
                      "date": {
                        "type": "string",
                        "description": "The date of the invoice",
                        "title": "Invoice Date"
                      },
                      "total": {
                        "type": "string",
                        "description": "The amount of the invoice, including the currency symbol or code.",
                        "title": "Invoice Amount"
                      }
                    },
                    "additionalProperties": false
                  },
                  {
                    "type": "string",
                    "description": "The name of the variable containing the invoice data.",
                    "title": "Invoice Variable"
                  }
                ]
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "action",
              "url"
            ],
            "properties": {
              "action": {
                "const": "navigate"
              },
              "url": {
                "type": "string",
                "description": "The URL to navigate to",
                "title": "URL"
              },
              "description": {
                "type": "string",
                "description": "A human-readable description of what this step does",
                "title": "Description"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "action",
              "selector"
            ],
            "properties": {
              "action": {
                "const": "checkElementExists"
              },
              "selector": {
                "type": "string",
                "description": "The CSS selector to use to find the element",
                "title": "Selector",
                "examples": [
                  "#example"
                ]
              },
              "description": {
                "type": "string",
                "description": "A human-readable description of what this step does",
                "title": "Description"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "action",
              "invoice"
            ],
            "properties": {
              "action": {
                "const": "printPdf"
              },
              "description": {
                "type": "string",
                "description": "A human-readable description of what this step does",
                "title": "Description"
              },
              "invoice": {
                "anyOf": [
                  {
                    "type": "object",
                    "required": [
                      "id",
                      "date",
                      "total"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the invoice",
                        "title": "Invoice ID"
                      },
                      "date": {
                        "type": "string",
                        "description": "The date of the invoice",
                        "title": "Invoice Date"
                      },
                      "total": {
                        "type": "string",
                        "description": "The amount of the invoice, including the currency symbol or code.",
                        "title": "Invoice Amount"
                      }
                    },
                    "additionalProperties": false
                  },
                  {
                    "type": "string",
                    "description": "The name of the variable containing the invoice data.",
                    "title": "Invoice Variable"
                  }
                ]
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "action"
            ],
            "properties": {
              "action": {
                "const": "waitForNavigation"
              },
              "timeout": {
                "type": "number",
                "description": "The number of milliseconds to wait for. Defaults to 15s.",
                "title": "Timeout",
                "examples": [
                  15000
                ],
                "default": 15000
              },
              "description": {
                "type": "string",
                "description": "A human-readable description of what this step does",
                "title": "Description"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "action",
              "duration"
            ],
            "properties": {
              "action": {
                "const": "sleep"
              },
              "duration": {
                "type": "number",
                "description": "The number of milliseconds to wait for",
                "title": "Duration"
              },
              "description": {
                "type": "string",
                "description": "A human-readable description of what this step does",
                "title": "Description"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "action",
              "url"
            ],
            "properties": {
              "action": {
                "const": "getInvoiceFromStripeUrl"
              },
              "url": {
                "type": "string",
                "description": "The URL of the Stripe invoice",
                "title": "Stripe Invoice URL"
              },
              "description": {
                "type": "string",
                "description": "A human-readable description of what this step does",
                "title": "Description"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "description": "Steps to get all invoices as PDF",
      "title": "Collect Invoices"
    }
  },
  "additionalProperties": false,
  "description": "Schema definition for a JSON-based plugin",
  "title": "JSON Plugin Schema",
  "examples": [
    {
      "name": "ExamplePlugin",
      "description": "This is an example plugin",
      "configSchema": {
        "exampleProperty": {
          "type": "string",
          "title": "Example Property",
          "description": "An example property for demonstration",
          "required": true
        }
      }
    }
  ],
  "$defs": {
    "Step": {
      "anyOf": [
        {
          "type": "object",
          "required": [
            "action",
            "selector",
            "value"
          ],
          "properties": {
            "action": {
              "const": "type"
            },
            "scopeSelector": {
              "type": "boolean",
              "description": "Defaults to true. If set, the selector will be scoped to the parent element",
              "title": "Scope Selector",
              "default": true
            },
            "optional": {
              "type": "boolean",
              "description": "Whether or not the flow should continue if this step fails",
              "title": "Optional"
            },
            "selector": {
              "type": "string",
              "description": "The CSS selector to use to find the element",
              "title": "Selector",
              "examples": [
                "#example"
              ]
            },
            "value": {
              "type": "string",
              "description": "a string",
              "title": "string"
            },
            "description": {
              "type": "string",
              "description": "A human-readable description of what this step does",
              "title": "Description"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "action",
            "selector",
            "forEach",
            "fields"
          ],
          "properties": {
            "action": {
              "const": "extractAll"
            },
            "variable": {
              "type": "string",
              "description": "The name of the variable to store the extracted value in. This is only available inside the forEach step, and represents a single item. Defaults to `item`",
              "title": "Variable",
              "default": "item"
            },
            "selector": {
              "type": "string",
              "description": "The CSS selector to use to find the element",
              "title": "Selector",
              "examples": [
                "#example"
              ]
            },
            "pagination": {
              "anyOf": [
                {
                  "type": "object",
                  "required": [
                    "type",
                    "selector",
                    "waitForSelector"
                  ],
                  "properties": {
                    "type": {
                      "const": "next"
                    },
                    "selector": {
                      "type": "string",
                      "description": "The CSS selector to use to find the element",
                      "title": "Selector",
                      "examples": [
                        "#example"
                      ]
                    },
                    "waitForSelector": {
                      "type": "string",
                      "description": "The CSS selector to use to find the element",
                      "title": "Selector",
                      "examples": [
                        "#example"
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "required": [
                    "type",
                    "script",
                    "waitForSelector"
                  ],
                  "properties": {
                    "type": {
                      "const": "script"
                    },
                    "script": {
                      "type": "string",
                      "description": "a string",
                      "title": "string"
                    },
                    "waitForSelector": {
                      "type": "string",
                      "description": "The CSS selector to use to find the element",
                      "title": "Selector",
                      "examples": [
                        "#example"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              ],
              "description": "Defines how to paginate through the results",
              "title": "Pagination"
            },
            "forEach": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/Step"
              }
            },
            "fields": {
              "type": "object",
              "required": [],
              "properties": {},
              "additionalProperties": {
                "anyOf": [
                  {
                    "type": "object",
                    "required": [
                      "selector"
                    ],
                    "properties": {
                      "selector": {
                        "type": "string",
                        "description": "The CSS selector to use to find the element",
                        "title": "Selector",
                        "examples": [
                          "#example"
                        ]
                      },
                      "attribute": {
                        "type": "string",
                        "description": "The attribute to get from the element. If not specified, the inner text will be used",
                        "title": "Attribute"
                      },
                      "transform": {
                        "type": "string",
                        "description": "A JavaScript function to transform the value",
                        "title": "Transform",
                        "examples": [
                          "(v) => Number(v.replace('$', ''))"
                        ]
                      }
                    },
                    "additionalProperties": false
                  },
                  {
                    "type": "string",
                    "description": "a string",
                    "title": "string"
                  }
                ]
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "action",
            "selector"
          ],
          "properties": {
            "action": {
              "const": "click"
            },
            "scopeSelector": {
              "type": "boolean",
              "description": "Defaults to true. If set, the selector will be scoped to the parent element",
              "title": "Scope Selector",
              "default": true
            },
            "optional": {
              "type": "boolean",
              "description": "Whether or not the flow should continue if this step fails",
              "title": "Optional"
            },
            "selector": {
              "type": "string",
              "description": "The CSS selector to use to find the element",
              "title": "Selector",
              "examples": [
                "#example"
              ]
            },
            "description": {
              "type": "string",
              "description": "A human-readable description of what this step does",
              "title": "Description"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "action",
            "selector"
          ],
          "properties": {
            "action": {
              "const": "waitForElement"
            },
            "optional": {
              "type": "boolean",
              "description": "Whether or not the flow should continue if this step fails",
              "title": "Optional"
            },
            "selector": {
              "type": "string",
              "description": "The CSS selector to use to find the element",
              "title": "Selector",
              "examples": [
                "#example"
              ]
            },
            "timeout": {
              "type": "number",
              "description": "The number of milliseconds to wait for. Defaults to 15s.",
              "title": "Timeout",
              "examples": [
                15000
              ],
              "default": 15000
            },
            "description": {
              "type": "string",
              "description": "A human-readable description of what this step does",
              "title": "Description"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "action",
            "script",
            "forEach"
          ],
          "properties": {
            "action": {
              "const": "extractAll"
            },
            "variable": {
              "type": "string",
              "description": "The name of the variable to store the extracted value in. This is only available inside the forEach step, and represents a single item. Defaults to `item`",
              "title": "Variable",
              "default": "item"
            },
            "script": {
              "type": "string",
              "description": "A JavaScript script to run in the page context",
              "title": "Script",
              "examples": [
                {
                  "script": "console.log(\"Hello World\");"
                }
              ]
            },
            "pagination": {
              "anyOf": [
                {
                  "type": "object",
                  "required": [
                    "type",
                    "selector",
                    "waitForSelector"
                  ],
                  "properties": {
                    "type": {
                      "const": "next"
                    },
                    "selector": {
                      "type": "string",
                      "description": "The CSS selector to use to find the element",
                      "title": "Selector",
                      "examples": [
                        "#example"
                      ]
                    },
                    "waitForSelector": {
                      "type": "string",
                      "description": "The CSS selector to use to find the element",
                      "title": "Selector",
                      "examples": [
                        "#example"
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "required": [
                    "type",
                    "script",
                    "waitForSelector"
                  ],
                  "properties": {
                    "type": {
                      "const": "script"
                    },
                    "script": {
                      "type": "string",
                      "description": "a string",
                      "title": "string"
                    },
                    "waitForSelector": {
                      "type": "string",
                      "description": "The CSS selector to use to find the element",
                      "title": "Selector",
                      "examples": [
                        "#example"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              ],
              "description": "Defines how to paginate through the results",
              "title": "Pagination"
            },
            "forEach": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/Step"
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "action",
            "script"
          ],
          "properties": {
            "action": {
              "const": "runJs"
            },
            "optional": {
              "type": "boolean",
              "description": "Whether or not the flow should continue if this step fails",
              "title": "Optional"
            },
            "script": {
              "type": "string",
              "description": "a string",
              "title": "string"
            },
            "description": {
              "type": "string",
              "description": "A human-readable description of what this step does",
              "title": "Description"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "action",
            "invoice"
          ],
          "properties": {
            "action": {
              "const": "waitForPdfDownload"
            },
            "timeout": {
              "type": "number",
              "description": "The number of milliseconds to wait for. Defaults to 15s.",
              "title": "Timeout",
              "examples": [
                15000
              ],
              "default": 15000
            },
            "description": {
              "type": "string",
              "description": "A human-readable description of what this step does",
              "title": "Description"
            },
            "invoice": {
              "anyOf": [
                {
                  "type": "object",
                  "required": [
                    "id",
                    "date",
                    "total"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the invoice",
                      "title": "Invoice ID"
                    },
                    "date": {
                      "type": "string",
                      "description": "The date of the invoice",
                      "title": "Invoice Date"
                    },
                    "total": {
                      "type": "string",
                      "description": "The amount of the invoice, including the currency symbol or code.",
                      "title": "Invoice Amount"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "description": "The name of the variable containing the invoice data.",
                  "title": "Invoice Variable"
                }
              ]
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "action",
            "variable",
            "script"
          ],
          "properties": {
            "action": {
              "const": "extract"
            },
            "variable": {
              "type": "string",
              "description": "The name of the variable to store the extracted value in. Defaults to `item`",
              "title": "Variable"
            },
            "script": {
              "type": "string",
              "description": "A JavaScript script to run in the page context",
              "title": "Script",
              "examples": [
                {
                  "script": "console.log(\"Hello World\");"
                }
              ]
            },
            "description": {
              "type": "string",
              "description": "A human-readable description of what this step does",
              "title": "Description"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "action",
            "variable",
            "fields"
          ],
          "properties": {
            "action": {
              "const": "extract"
            },
            "variable": {
              "type": "string",
              "description": "The name of the variable to store the extracted value in. Defaults to `item`",
              "title": "Variable"
            },
            "description": {
              "type": "string",
              "description": "A human-readable description of what this step does",
              "title": "Description"
            },
            "fields": {
              "type": "object",
              "required": [],
              "properties": {},
              "additionalProperties": {
                "anyOf": [
                  {
                    "type": "object",
                    "required": [
                      "selector"
                    ],
                    "properties": {
                      "selector": {
                        "type": "string",
                        "description": "The CSS selector to use to find the element",
                        "title": "Selector",
                        "examples": [
                          "#example"
                        ]
                      },
                      "attribute": {
                        "type": "string",
                        "description": "The attribute to get from the element. If not specified, the inner text will be used",
                        "title": "Attribute"
                      },
                      "transform": {
                        "type": "string",
                        "description": "A JavaScript function to transform the value",
                        "title": "Transform",
                        "examples": [
                          "(v) => Number(v.replace('$', ''))"
                        ]
                      }
                    },
                    "additionalProperties": false
                  },
                  {
                    "type": "string",
                    "description": "a string",
                    "title": "string"
                  }
                ]
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "action",
            "url",
            "invoice"
          ],
          "properties": {
            "action": {
              "const": "downloadPdf"
            },
            "url": {
              "type": "string",
              "description": "The URL to download the PDF from",
              "title": "URL"
            },
            "description": {
              "type": "string",
              "description": "A human-readable description of what this step does",
              "title": "Description"
            },
            "invoice": {
              "anyOf": [
                {
                  "type": "object",
                  "required": [
                    "id",
                    "date",
                    "total"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the invoice",
                      "title": "Invoice ID"
                    },
                    "date": {
                      "type": "string",
                      "description": "The date of the invoice",
                      "title": "Invoice Date"
                    },
                    "total": {
                      "type": "string",
                      "description": "The amount of the invoice, including the currency symbol or code.",
                      "title": "Invoice Amount"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "description": "The name of the variable containing the invoice data.",
                  "title": "Invoice Variable"
                }
              ]
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "action",
            "url"
          ],
          "properties": {
            "action": {
              "const": "navigate"
            },
            "url": {
              "type": "string",
              "description": "The URL to navigate to",
              "title": "URL"
            },
            "description": {
              "type": "string",
              "description": "A human-readable description of what this step does",
              "title": "Description"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "action",
            "selector"
          ],
          "properties": {
            "action": {
              "const": "checkElementExists"
            },
            "selector": {
              "type": "string",
              "description": "The CSS selector to use to find the element",
              "title": "Selector",
              "examples": [
                "#example"
              ]
            },
            "description": {
              "type": "string",
              "description": "A human-readable description of what this step does",
              "title": "Description"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "action",
            "invoice"
          ],
          "properties": {
            "action": {
              "const": "printPdf"
            },
            "description": {
              "type": "string",
              "description": "A human-readable description of what this step does",
              "title": "Description"
            },
            "invoice": {
              "anyOf": [
                {
                  "type": "object",
                  "required": [
                    "id",
                    "date",
                    "total"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the invoice",
                      "title": "Invoice ID"
                    },
                    "date": {
                      "type": "string",
                      "description": "The date of the invoice",
                      "title": "Invoice Date"
                    },
                    "total": {
                      "type": "string",
                      "description": "The amount of the invoice, including the currency symbol or code.",
                      "title": "Invoice Amount"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "description": "The name of the variable containing the invoice data.",
                  "title": "Invoice Variable"
                }
              ]
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "action"
          ],
          "properties": {
            "action": {
              "const": "waitForNavigation"
            },
            "timeout": {
              "type": "number",
              "description": "The number of milliseconds to wait for. Defaults to 15s.",
              "title": "Timeout",
              "examples": [
                15000
              ],
              "default": 15000
            },
            "description": {
              "type": "string",
              "description": "A human-readable description of what this step does",
              "title": "Description"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "action",
            "duration"
          ],
          "properties": {
            "action": {
              "const": "sleep"
            },
            "duration": {
              "type": "number",
              "description": "The number of milliseconds to wait for",
              "title": "Duration"
            },
            "description": {
              "type": "string",
              "description": "A human-readable description of what this step does",
              "title": "Description"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "action",
            "url"
          ],
          "properties": {
            "action": {
              "const": "getInvoiceFromStripeUrl"
            },
            "url": {
              "type": "string",
              "description": "The URL of the Stripe invoice",
              "title": "Stripe Invoice URL"
            },
            "description": {
              "type": "string",
              "description": "A human-readable description of what this step does",
              "title": "Description"
            }
          },
          "additionalProperties": false
        }
      ]
    }
  }
}
